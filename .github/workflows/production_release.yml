name: Deployment [PyPI]

on:
  workflow_dispatch: {}

jobs:
  bump:
    name: Bump version ðŸš€
    runs-on: ubuntu-latest
    continue-on-error: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true # this fetches all tags
          token: ${{ secrets.GH_TOKEN }} # token for pushing to protected branch

      - name: Set up Python and Upgrade pip
        uses: ./.github/actions/setup_python
        with:
          python-version: "3.11"

      # 3.0.1-dev5 -> 3.0.1 with release
      - name: Update development version
        uses: ./.github/actions/bump_version
        with:
          type: "release"
          commit: true
          tag: true
          push: true

  build:
    name: Build distribution ðŸ“¦
    needs: bump
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python and Upgrade pip
        uses: ./.github/actions/setup_python
        with:
          python-version: "3.11"

      - name: Build package
        uses: ./.github/actions/build_package

      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: prod-package-dist
          path: dist/

  publish_pypi:
    name: Publish distribution ðŸ“¦ to PyPI
    runs-on: ubuntu-latest
    needs: build

    environment:
      name: pypi
      url: https://pypi.org/p/soupsavvy

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Set up Python and Upgrade pip
        uses: ./.github/actions/setup_python
        with:
          python-version: "3.11"

      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: prod-package-dist
          path: dist/

      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github_release:
    name: Create GitHub Release ðŸ“¦
    needs: publish_pypi
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # this fetches all history and tags
          fetch-tags: true # this fetches all tags

      - name: Get recent tag
        run: |
          git pull --tags
          tag=$(git describe --abbrev=0)
          echo "Release tag: $tag"
          echo "tag=$tag" >> $GITHUB_ENV

      - name: Create Release
        run: |
          gh release create $TAG --title $TAG --generate-notes --verify-tag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ env.tag }}
